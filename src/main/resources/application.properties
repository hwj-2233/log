data.consumer.cron=0 0 23 * * ? 
#应用名
spring.application.name=sb-web
server.port=8088
spring.mvc.favicon.enable=false


#数据库配置(可改可不改)
spring.datasource.url=jdbc:mysql://47.92.123.27:3306/blog?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=123456
mybatis-plus.mapper-locations=classpath:mappers/*.xml


#springboot security
spring.security.user.name=hwj
spring.security.user.password=123456
spring.security.user.roles=admin


#本机运行请切换 windows下目录，部署环境请用linux目录
Directory=D:/Google/
localDir=D:/Google/
remoteDir=/application/


#短信服务
message.key=d41d8cd98f00b204e980
message.uid=hwj2233
captcha=123456

#github登录
github.clientId=ceeca6d74a0650569319
github.clientSecret=cc74c669ebb1b53c027861e0c7ad3bcc9e70bff2

#qq登录
qq.appId=
qq.appKey=

#jwt配置
jwt.token-header=zy_token
jwt.expire=172800
jwt.rsa-secret=xx1WET12^%3^(WE45
token.expire=3600

# log config
logging.config=classpath:logback-spring.xml
# 调度中心部署跟地址：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"
xxl.job.admin.addresses=http://47.92.123.27:8081/xxl-job-admin
# 执行器"AppName"和地址信息配置：AppName执行器心跳注册分组依据；地址信息用于"调度中心请求并触发任务"和"执行器注册"。执行器默认端口为9999，执行器IP默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用。单机部署多个执行器时，注意要配置不同执行器端口
xxl.job.executor.appname=xxl-job-executor-sample
xxl.job.executor.ip=
xxl.job.executor.port=9998
# 执行器通讯TOKEN，非空时启用
xxl.job.accessToken=
# 执行器运行日志文件存储的磁盘位置，需要对该路径拥有读写权限
xxl.job.executor.logpath=/data/applogs/xxl-job/jobhandler
# 执行器Log文件定期清理功能，指定日志保存天数，日志文件过期自动删除。限制至少保持3天，否则功能不生效；
xxl.job.executor.logretentiondays=-1


# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=47.92.123.27
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示有限制）
spring.redis.pool.max-active=200
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=1000

#rabbitmq配置
spring.rabbitmq.host=47.92.123.27
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

##环境切换
#spring.profiles.active=dev

#打包解锁
spring.profiles.active=@profiles.active@

#udertow服务器替代tomcat 可解锁
## 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
## 不要设置过大，如果过大，启动项目会报错：打开文件数过多
#
#server.undertow.io-threads=16
#
## 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
## 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
#server.undertow.worker-threads=256
#
## 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
## 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
#server.undertow.buffer-size=1024
#
## 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
#server.undertow.buffers-per-region=1024
#
## 是否分配的直接内存(NIO直接分配的堆外内存)
#server.undertow.direct-buffers=true

